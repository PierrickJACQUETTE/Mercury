<?php

namespace Proxies\__CG__\PW6\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Personnel extends \PW6\UserBundle\Entity\Personnel implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'id', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'username', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'fname', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'pname', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'birth', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'date', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'sex', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'contrat', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'time', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'salary', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'superieur', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'formation'];
        }

        return ['__isInitialized__', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'id', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'username', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'fname', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'pname', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'birth', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'date', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'sex', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'contrat', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'time', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'salary', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'superieur', '' . "\0" . 'PW6\\UserBundle\\Entity\\Personnel' . "\0" . 'formation'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Personnel $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFname($fname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFname', [$fname]);

        return parent::setFname($fname);
    }

    /**
     * {@inheritDoc}
     */
    public function getFname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFname', []);

        return parent::getFname();
    }

    /**
     * {@inheritDoc}
     */
    public function setPname($pname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPname', [$pname]);

        return parent::setPname($pname);
    }

    /**
     * {@inheritDoc}
     */
    public function getPname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPname', []);

        return parent::getPname();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirth($birth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirth', [$birth]);

        return parent::setBirth($birth);
    }

    /**
     * {@inheritDoc}
     */
    public function getBirth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirth', []);

        return parent::getBirth();
    }

    /**
     * {@inheritDoc}
     */
    public function setSex($sex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSex', [$sex]);

        return parent::setSex($sex);
    }

    /**
     * {@inheritDoc}
     */
    public function getSex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSex', []);

        return parent::getSex();
    }

    /**
     * {@inheritDoc}
     */
    public function setContrat($contrat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContrat', [$contrat]);

        return parent::setContrat($contrat);
    }

    /**
     * {@inheritDoc}
     */
    public function getContrat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContrat', []);

        return parent::getContrat();
    }

    /**
     * {@inheritDoc}
     */
    public function setTime($time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTime', [$time]);

        return parent::setTime($time);
    }

    /**
     * {@inheritDoc}
     */
    public function getTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTime', []);

        return parent::getTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalary($salary)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalary', [$salary]);

        return parent::setSalary($salary);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalary()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalary', []);

        return parent::getSalary();
    }

    /**
     * {@inheritDoc}
     */
    public function setSuperieur($superieur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuperieur', [$superieur]);

        return parent::setSuperieur($superieur);
    }

    /**
     * {@inheritDoc}
     */
    public function getSuperieur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSuperieur', []);

        return parent::getSuperieur();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setFormation($formation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFormation', [$formation]);

        return parent::setFormation($formation);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormation', []);

        return parent::getFormation();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

}
